
@article{Amazon,
  abstract      = {Engineers use TLA+ to prevent serious but subtle bugs from reaching production.},
  address       = {New York, NY, USA},
  author        = {Newcombe, Chris and Rath, Tim and Zhang, Fan and Munteanu, Bogdan and Brooker, Marc and Deardeuff, Michael},
  date-modified = {2025-02-06 16:10:16 +0200},
  file          = {papers/Amazon.pdf},
  issn          = {0001-0782},
  issue_date    = {April 2015},
  journal       = {Commun. ACM},
  month         = mar,
  number        = {4},
  numpages      = {8},
  pages         = {66--73},
  publisher     = {Association for Computing Machinery},
  shorttitle    = {{{AMZ}}},
  title         = {How Amazon web services uses formal methods},
  volume        = {58},
  year          = {2015},
  bdsk-url-1    = {https://doi.org/10.1145/2699417}
}

@inproceedings{TAS,
  author        = {Resch, Stefan and Paulitsch, Michael},
  booktitle     = {2017 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)},
  date-modified = {2025-02-06 16:10:16 +0200},
  keywords      = {Fault tolerant systems;Algorithm design and analysis;Model checking;Redundancy;Middleware;TLA+;model checking;code generation},
  pages         = {146-152},
  title         = {Using TLA+ in the Development of a Safety-Critical Fault-Tolerant Middleware},
  year          = {2017},
  bdsk-url-1    = {https://doi.org/10.1109/ISSREW.2017.43}
}

@inproceedings{Train,
  author        = {Salierno, Giulio and Morvillo, Sabatino and Leonardi, Letizia and Cabri, Giacomo},
  booktitle     = {2020 IEEE 29th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE)},
  date-modified = {2025-02-06 16:10:16 +0200},
  keywords      = {Formal languages;Systems modeling;Rail transportation;Software;Safety;Mathematical model;Formal specifications;Railway software specification;Verification;Validation;Formal methods},
  pages         = {207-212},
  title         = {Specification and verification of railway safety-critical systems using TLA+: A Case Study},
  year          = {2020},
  bdsk-url-1    = {https://doi.org/10.1109/WETICE49692.2020.00048}
}

@inproceedings{Aviation,
  author        = {Das, Madhusmita and Mohan, Biju R. and Guddeti, Ram Mohana Reddy and Dilshad, Mohd and Ahmed, Fahim and Zunja, Sudarshan and Minank, K P},
  booktitle     = {2024 15th International Conference on Computing Communication and Networking Technologies (ICCCNT)},
  date-modified = {2025-02-06 16:10:16 +0200},
  keywords      = {Industries;Computational modeling;Petri nets;Software;Safety;Software reliability;Manufacturing;Logic;Formal specifications;Safety critical system;Petri Nets;Temporal Logic Of Actions (TLA+) tool;TLC Model Checker},
  pages         = {1-6},
  title         = {TLA+ Specification of Aviation System with Time Analysis},
  year          = {2024},
  bdsk-url-1    = {https://doi.org/10.1109/ICCCNT61001.2024.10725489}
}

@misc{FindFacts,
  author        = {Huch, Fabian and Krauss, Alexander},
  copyright     = {Creative Commons Attribution 4.0 International},
  date-modified = {2025-02-06 16:10:16 +0200},
  keywords      = {Logic in Computer Science (cs.LO), FOS: Computer and information sciences, FOS: Computer and information sciences},
  publisher     = {arXiv},
  shorttitle    = {{{LCA}}},
  title         = {FindFacts: A Scalable Theorem Search},
  year          = {2022},
  bdsk-url-1    = {https://arxiv.org/abs/2204.14191},
  bdsk-url-2    = {https://doi.org/10.48550/ARXIV.2204.14191}
}

@inproceedings{Merz1999AnEO,
  author        = {Stephan Merz},
  date-modified = {2025-02-06 16:10:16 +0200},
  title         = {An Encoding of TLA in Isabelle},
  year          = {1999},
  bdsk-url-1    = {https://api.semanticscholar.org/CorpusID:10435651}
}

@article{Grov2011ADE,
  author        = {Gudmund Grov and Stephan Merz},
  date-modified = {2025-02-06 16:10:16 +0200},
  journal       = {Arch. Formal Proofs},
  title         = {A Definitional Encoding of TLA* in Isabelle/HOL},
  volume        = {2011},
  year          = {2011},
  bdsk-url-1    = {https://api.semanticscholar.org/CorpusID:7524763}
}

@preprint{CoqAutoCompletion,
  author        = {Hjalte Dalland, Jakob Israelsen, and Simon Kristensen},
  date-modified = {2025-02-06 16:10:16 +0200},
  file          = {papers/Expanding_Coq_with_Type_Aware_Code_Completion.pdf},
  title         = {Expanding Coq With Type Aware Code Completion},
  year          = {2023},
  bdsk-url-1    = {https://github.com/Jakobis/vscoqComparison/blob/a181fe074cdca4ee0b13c2c71ab907bea73a5432/Expanding_Coq_with_Type_Aware_Code_Completion.pdf}
}

@inproceedings{CoqSearchByTypeInhabition,
  abstract  = {We present a practical proof search procedure for Coq based on a direct search for type inhabitants in an appropriate normal form. The procedure is more general than any of the automation tactics natively available in Coq. It aims to handle as large a part of the Calculus of Inductive Constructions as practically feasible.},
  address   = {Cham},
  author    = {Czajka, {\L}ukasz},
  booktitle = {Automated Reasoning},
  editor    = {Peltier, Nicolas and Sofronie-Stokkermans, Viorica},
  file      = {papers/Practical Proof Search for Coq by Type Inhabitation.pdf},
  isbn      = {978-3-030-51054-1},
  pages     = {28--57},
  publisher = {Springer International Publishing},
  title     = {Practical Proof Search for Coq by Type Inhabitation},
  year      = {2020}
}

@misc{TLAPS_LLM,
  archiveprefix = {arXiv},
  author        = {Yuhao Zhou},
  date-modified = {2025-02-06 16:10:16 +0200},
  eprint        = {2501.03073},
  file          = {Retrieval-Augmented TLAPS Proof Generation with Large Language Models.pdf},
  primaryclass  = {cs.LO},
  title         = {Retrieval-Augmented TLAPS Proof Generation with Large Language Models},
  year          = {2025},
  bdsk-url-1    = {https://arxiv.org/abs/2501.03073}
}

@article{CoqHammer,
  author    = {Czajka, {\L}ukasz and Kaliszyk, Cezary},
  journal   = {Journal of automated reasoning},
  pages     = {423--453},
  publisher = {Springer},
  title     = {Hammer for Coq: Automation for dependent type theory},
  volume    = {61},
  year      = {2018}
}

@inproceedings{CoqHammerSauto,
  author       = {Czajka, {\L}ukasz},
  booktitle    = {Automated Reasoning: 10th International Joint Conference, IJCAR 2020, Paris, France, July 1--4, 2020, Proceedings, Part II 10},
  file         = {papers/sauto.pdf},
  organization = {Springer},
  pages        = {28--57},
  title        = {Practical proof search for coq by type inhabitation},
  year         = {2020}
}

@inproceedings{CoqHammerHammer,
  address       = {Dagstuhl, Germany},
  annote        = {Keywords: pure type systems, first-order logic, hammers, proof automation, dependent type theory},
  author        = {Czajka, Lukasz},
  booktitle     = {22nd International Conference on Types for Proofs and Programs (TYPES 2016)},
  date-modified = {2025-02-06 16:10:16 +0200},
  editor        = {Ghilezan, Silvia and Geuvers, Herman and Ivetic, Jelena},
  file          = {parers/hammer.pdf},
  isbn          = {978-3-95977-065-1},
  issn          = {1868-8969},
  pages         = {9:1--9:39},
  publisher     = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  series        = {Leibniz International Proceedings in Informatics (LIPIcs)},
  title         = {{A Shallow Embedding of Pure Type Systems into First-Order Logic}},
  urn           = {urn:nbn:de:0030-drops-98533},
  volume        = {97},
  year          = {2018},
  bdsk-url-1    = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.TYPES.2016.9},
  bdsk-url-2    = {https://doi.org/10.4230/LIPIcs.TYPES.2016.9}
}

@article{TacTok,
  abstract      = {Formally verifying software correctness is a highly manual process. However, because verification proof scripts often share structure, it is possible to learn from existing proof scripts to fully automate some formal verification. The goal of this paper is to improve proof script synthesis and enable fully automating more verification. Interactive theorem provers, such as the Coq proof assistant, allow programmers to write partial proof scripts, observe the semantics of the proof state thus far, and then attempt more progress. Knowing the proof state semantics is a significant aid. Recent research has shown that the proof state can help predict the next step. In this paper, we present TacTok, the first technique that attempts to fully automate proof script synthesis by modeling proof scripts using both the partial proof script written thus far and the semantics of the proof state. Thus, TacTok more completely models the information the programmer has access to when writing proof scripts manually. We evaluate TacTok on a benchmark of 26 software projects in Coq, consisting of over 10 thousand theorems. We compare our approach to five tools. Two prior techniques, CoqHammer, the state-of-the-art proof synthesis technique, and ASTactic, a proof script synthesis technique that models proof state. And three new proof script synthesis technique we create ourselves, SeqOnly, which models only the partial proof script and the initial theorem being proven, and WeightedRandom and WeightedGreedy, which use metaheuristic search biased by frequencies of proof tactics in existing, successful proof scripts. We find that TacTok outperforms WeightedRandom and WeightedGreedy, and is complementary to CoqHammer and ASTactic: for 24 out of the 26 projects, TacTok can synthesize proof scripts for some theorems the prior tools cannot. Together with TacTok, 11.5\% more theorems can be proven automatically than by CoqHammer alone, and 20.0\% than by ASTactic alone. Compared to a combination of CoqHammer and ASTactic, TacTok can prove an additional 3.6\% more theorems, proving 115 theorems no tool could previously prove. Overall, our experiments provide evidence that partial proof script and proof state semantics, together, provide useful information for proof script modeling, and that metaheuristic search is a promising direction for proof script synthesis. TacTok is open-source and we make public all our data and a replication package of our experiments.},
  address       = {New York, NY, USA},
  articleno     = {231},
  author        = {First, Emily and Brun, Yuriy and Guha, Arjun},
  date-modified = {2025-02-06 16:10:16 +0200},
  issue_date    = {November 2020},
  journal       = {Proc. ACM Program. Lang.},
  keywords      = {proof script synthesis, formal software verification, automated proof script synthesis, Coq},
  month         = nov,
  number        = {OOPSLA},
  numpages      = {31},
  publisher     = {Association for Computing Machinery},
  title         = {TacTok: semantics-aware proof synthesis},
  volume        = {4},
  year          = {2020},
  bdsk-url-1    = {https://doi.org/10.1145/3428299}
}

@article{IntroToCoq,
  author    = {Paulin-Mohring, Christine},
  journal   = {All about Proofs, Proofs for All},
  publisher = {College Publications},
  title     = {Introduction to the calculus of inductive constructions},
  volume    = {55},
  year      = {2015}
}

@article{EProver,
  author    = {Schulz, Stephan},
  file      = {papers/E -- a brainiac theorem prover.pdf},
  journal   = {Ai Communications},
  number    = {2-3},
  pages     = {111--126},
  publisher = {IOS Press},
  title     = {E--a brainiac theorem prover},
  volume    = {15},
  year      = {2002}
}

@inproceedings{Proofster,
  author       = {Agrawal, Arpan and First, Emily and Kaufman, Zhanna and Reichel, Tom and Zhang, Shizhuo and Zhou, Timothy and Sanchez-Stern, Alex and Ringer, Talia and Brun, Yuriy},
  booktitle    = {2023 IEEE/ACM 45th International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)},
  file         = {papers/PRoofster: Automated Formal Verification.pdf},
  organization = {IEEE},
  pages        = {26--30},
  title        = {Proofster: Automated formal verification},
  year         = {2023}
}

@article{ProofCloud,
  author  = {Wang, Shuai},
  eprint  = {arXiv:2412.20947},
  file    = {papers/ProofCloud.pdf},
  journal = {arXiv preprint arXiv:2412.20947},
  title   = {ProofCloud: A Proof Retrieval Engine for Verified Proofs in Higher Order Logic},
  year    = {2024}
}

@inproceedings{AutomaticProofDisproofInIsabelleHol,
  author       = {Blanchette, Jasmin Christian and Bulwahn, Lukas and Nipkow, Tobias},
  booktitle    = {Frontiers of Combining Systems: 8th International Symposium, FroCoS 2011, Saarbr{\"u}cken, Germany, October 5-7, 2011. Proceedings 8},
  file         = {papers/AutomaticProofDisproofInIsabelleHol.pdf},
  organization = {Springer},
  pages        = {12--27},
  title        = {Automatic proof and disproof in Isabelle/HOL},
  year         = {2011}
}

@inproceedings{HanoiTowerIsabelle,
  author        = {Xu, Huazhen and You, Zhen and Xue, Jinyun},
  booktitle     = {2016 17th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)},
  date-modified = {2025-02-06 16:10:16 +0200},
  file          = {papers/HanoiTowerIsabelle.pdf},
  keywords      = {Poles and towers;Algorithm design and analysis;Manuals;Formal specifications;Games;Software;Data structures;Hanoi Tower;Isabelle;automatic verification;non-recursive algorithm},
  pages         = {13-18},
  title         = {Automatic verification of non-recursive algorithm of Hanoi Tower by using Isabelle Theorem Prover},
  year          = {2016},
  bdsk-url-1    = {https://doi.org/10.1109/SNPD.2016.7515871}
}

@article{TheTLAToolbox,
  author        = {Markus Alexander Kuppe and Leslie Lamport and Daniel Ricketts},
  date-modified = {2025-02-06 16:10:16 +0200},
  eprint        = {arXiv:1912.10633},
  file          = {papers/TheTLAToolbox.pdf},
  howpublished  = {EPTCS 310, 2019, pp. 50-62},
  title         = {The TLA+ Toolbox},
  year          = {2019},
  bdsk-url-1    = {https://doi.org/10.4204/EPTCS.310.6}
}

@inproceedings{Zenon,
  abstract    = {We present Zenon, an automated theorem prover for first order classical logic (with equality), based on the tableau method. Zenon is intended to be the dedicated prover of the Focal environment, an object-oriented algebraic specification and proof system, which is able to produce OCaml code for execution and Coq code for certification. Zenon can directly generate Coq proofs (proof scripts or proof terms), which can be reinserted in the Coq specifications produced by Focal. Zenon can also be extended, which makes specific (and possibly local) automation possible in Focal.},
  address     = {Berlin, Heidelberg},
  author      = {Bonichon, Richard and Delahaye, David and Doligez, Damien},
  booktitle   = {Logic for Programming, Artificial Intelligence, and Reasoning},
  editor      = {Dershowitz, Nachum and Voronkov, Andrei},
  file        = {papers/Zenon.pdf},
  isbn        = {978-3-540-75560-9},
  pages       = {151--165},
  publisher   = {Springer Berlin Heidelberg},
  title       = {Zenon: An Extensible Automated Theorem Prover Producing Checkable Proofs},
  year        = {2007},
  bdsk-file-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhYYm9va21hcmtfEDcuLi8uLi9Eb3dubG9hZHMvYm9uaWNob24tZGVsYWhheWUtZG9saWdlei1scGFyLTIwMDcucGRmTxED4GJvb2vgAwAAAAAEEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANwCAAAFAAAAAQEAAFVzZXJzAAAAEgAAAAEBAABkb21hbnRhcy5rZXR1cmFraXMAAAkAAAABAQAARG93bmxvYWRzAAAAJwAAAAEBAABib25pY2hvbi1kZWxhaGF5ZS1kb2xpZ2V6LWxwYXItMjAwNy5wZGYAEAAAAAEGAAAEAAAAFAAAADAAAABEAAAACAAAAAQDAAClQQAAAAAAAAgAAAAEAwAA7CQEAAAAAAAIAAAABAMAACAlBAAAAAAACAAAAAQDAADmlDkEAAAAABAAAAABBgAAjAAAAJwAAACsAAAAvAAAAAgAAAAABAAAQcaqfWZ44KAYAAAAAQIAAAEAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAgAAAAEAwAAAgAAAAAAAAAEAAAAAwMAAPYBAAAIAAAAAQkAAGZpbGU6Ly8vDAAAAAEBAABNYWNpbnRvc2ggSEQIAAAABAMAAACQgpbnAAAACAAAAAAEAABBxng71QAAACQAAAABAQAARTM4Q0IxRDMtMkRCNC00MTJCLUExRDYtQkVERTRDOTYyOUIwGAAAAAECAACBAAAAAQAAAO8TAAABAAAAAAAAAAAAAAABAAAAAQEAAC8AAAAAAAAAAQUAAP0AAAABAgAANjAyMWI3Y2YzMjQ0ZDFkMTYwMTAyZmFlNDQ4MGU1MTE2M2UxZWU1NTU3Y2ExMTViZmU1ZTE2ZDA5YmQxZDgxNDswMDswMDAwMDAwMDswMDAwMDAwMDswMDAwMDAwMDswMDAwMDAwMDAwMDAwMDIwO2NvbS5hcHBsZS5hcHAtc2FuZGJveC5yZWFkLXdyaXRlOzAxOzAxMDAwMDEwOzAwMDAwMDAwMDQzOTk0ZTY7NjQ7L3VzZXJzL2RvbWFudGFzLmtldHVyYWtpcy9kb3dubG9hZHMvYm9uaWNob24tZGVsYWhheWUtZG9saWdlei1scGFyLTIwMDcucGRmAAAAAMwAAAD+////AQAAAAAAAAAQAAAABBAAAHQAAAAAAAAABRAAAMwAAAAAAAAAEBAAAPQAAAAAAAAAQBAAAOQAAAAAAAAAAiAAAMABAAAAAAAABSAAADABAAAAAAAAECAAAEABAAAAAAAAESAAAHQBAAAAAAAAEiAAAFQBAAAAAAAAEyAAAGQBAAAAAAAAICAAAKABAAAAAAAAMCAAAMwBAAAAAAAAAcAAABQBAAAAAAAAEcAAABQAAAAAAAAAEsAAACQBAAAAAAAAgPAAANQBAAAAAAAAAAgADQAaACMAXQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAARB}
}

@phdthesis{EncodingDefourne,
  url    = {http://www.theses.fr/2023LORR0263},
  title  = {Encoding TLA⁺’s Set Theory for Automated Theorem Provers},
  author = {Defourné, Rosalie},
  year   = {2023},
  note   = {Thèse de doctorat dirigée par Merz, Stephan et Fontaine, Pascal Informatique Université de Lorraine 2023},
  note   = {2023LORR0263},
  url    = {http://www.theses.fr/2023LORR0263/document},
  file   = {papers/EncodingDefourne.pdf}
}

@inproceedings{TLA_Proofs,
  title        = {TLA+ proofs},
  author       = {Cousineau, Denis and Doligez, Damien and Lamport, Leslie and Merz, Stephan and Ricketts, Daniel and Vanzetto, Hern{\'a}n},
  booktitle    = {FM 2012: Formal Methods: 18th International Symposium, Paris, France, August 27-31, 2012. Proceedings 18},
  pages        = {147--154},
  year         = {2012},
  organization = {Springer},
  file         = {papers/TLA+Proofs.pdf},
  url          = {https://arxiv.org/pdf/1208.5933}
}

@article{EncodingTLASafelyForSMT,
  title    = {Encoding TLA+ proof obligations safely for SMT},
  journal  = {Science of Computer Programming},
  volume   = {239},
  pages    = {103178},
  year     = {2025},
  issn     = {0167-6423},
  doi      = {https://doi.org/10.1016/j.scico.2024.103178},
  url      = {https://www.sciencedirect.com/science/article/pii/S0167642324001011},
  author   = {Rosalie Defourné},
  keywords = {Automated theorem proving, SMT, TLA, TLAPS},
  abstract = {The TLA+ Proof System (TLAPS) allows users to verify proofs with the support of automated theorem provers, including SMT solvers. To increase trust in TLAPS, we revisited the encoding of TLA+ for SMT, whose implementation had become too complex. Our approach is based on a first-order axiomatization with E-matching patterns. The new encoding is available with TLAPS and achieves performances similar to the previous version, despite its simpler design.},
  url      = {https://inria.hal.science/hal-04701040/document},
  file     = {papers/EncodingTLAProofObligationsSafelyForSMT.pdf}
}
